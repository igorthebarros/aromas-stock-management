@model Aromas.MVC.ViewModels.ProductViewModel

@{
    ViewData["Title"] = "Create";
}

<h1>Product</h1>
<span>Create</span>
<hr />

@using (Html.BeginForm("Create", "Product",
               FormMethod.Post, new { @class = "form-horizontal", @id = "form-product" }))
{
    <div class="portlet light bordered">
        <div class="portlet-title">
            <div class="caption">
                <span class="caption-subject font-dark bold uppercase"> New Product </span>
            </div>
            <div class="actions">
                <a href="" class="btn btn-default"> Back </a>
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </div>
        <div class="portlet-body">
            <div class="row">
                <div class="col-md-11 col-lg-5">
                    @Html.AntiForgeryToken()
                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="form-group">
                            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @required = true } })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.IsInStock, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.IsInStock, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.IsInStock, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.StockQuantity, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.StockQuantity, new { htmlAttributes = new { @class = "form-control", @required = true } })
                                @Html.ValidationMessageFor(model => model.StockQuantity, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.CategoryId, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.CategoryId, new { htmlAttributes = new { @class = "form-control", @required = true } })
                                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
