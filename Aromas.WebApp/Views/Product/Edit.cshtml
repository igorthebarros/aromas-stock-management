@model Aromas.MVC.ViewModels.ProductViewModel

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>ProductViewModel</h4>
<hr />
@using (Html.BeginForm())
{
    <div class="portlet light bordered">
        <div class="portlet-title">
            <div class="caption">
                <span class="caption-subject font-dark bold uppercase"> Product edit </span>
            </div>
            <div class="actions">
                <a href="/Setting/User" class="btn btn-default"> Back </a>
                <input type="submit" value="Salvar" class="btn btn-primary" />
            </div>
        </div>
        <div class="portlet-body">
            <div class="row">
                <div class="col-md-11 col-lg-5">
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(model => model.Id, htmlAttributes: new { @class = "control-label col-md-3" })

                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        @*TODO:Implement this when Policies is added*@
                        @*<div class="form-group">
            @Html.LabelFor(model => model.PolicyId, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.DropDownList("PolicyId", null, "Selecione um Perfi", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PolicyId, "", new { @class = "text-danger" })
            </div>
        </div>*@
                        <input hidden value="@Model.Id" />
                        <div class="form-group">
                            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @required = true } })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.IsInStock, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.IsInStock, new { htmlAttributes = new { @class = "form-control", @required = true } })
                                @Html.ValidationMessageFor(model => model.IsInStock, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.StockQuantity, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.StockQuantity, new { htmlAttributes = new { @class = "form-control", @required = true } })
                                @Html.ValidationMessageFor(model => model.StockQuantity, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.CategoryId, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                <div class="mt-checkbox-list" style="padding: 5px 0 0 22px;">
                                    <label class="mt-checkbox mt-checkbox-outline">
                                        @Html.EditorFor(model => model.CategoryId)
                                        @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                                        <span></span>
                                    </label>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.CreatedAt, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.TextBoxFor(m => m.CreatedAt, "{0:dd/MM/yyyy HH:mm}", htmlAttributes: new { @class = "form-control date-timepicker", @disabled = "disabled" })
                                @Html.ValidationMessageFor(model => model.CreatedAt, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        @if (Model.UpdatedAt != null)
                        {
                            <div class="form-group">
                                @Html.LabelFor(model => model.UpdatedAt, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.TextBoxFor(m => m.UpdatedAt, "{0:dd/MM/yyyy HH:mm}", htmlAttributes: new { @class = "form-control date-timepicker", @disabled = "disabled" })
                                    @Html.ValidationMessageFor(model => model.UpdatedAt, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
  
}


<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
