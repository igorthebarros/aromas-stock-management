@model Aromas.MVC.ViewModels.UserViewModel

@{
    ViewData["Title"] = "Create";
}

<h1>User</h1>
<span>Create</span>
<hr />

@using (Html.BeginForm("Create", "User",
                FormMethod.Post, new { @class = "form-horizontal", @id = "form-user" }))
{
    <div class="portlet light bordered">
        <div class="portlet-title">
            <div class="caption">
                <span class="caption-subject font-dark bold uppercase"> New User </span>
            </div>
            <div class="actions">
                <a href="" class="btn btn-default"> Back </a>
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </div>
        <div class="portlet-body">
            <div class="row">
                <div class="col-md-11 col-lg-5">
                    @Html.AntiForgeryToken()
                    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    @*TODO:Implement this when Policies is added*@
                    @*<div class="form-group">
                        @Html.LabelFor(model => model.PolicyId, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.DropDownList("PolicyId", null, "Selecione um Perfil", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.PolicyId, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @required = true } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Surname, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control", @required = true } })
                            @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @required = true } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @required = true } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            <div class="mt-checkbox-list" style="padding: 5px 0 0 22px;">
                                <label class="mt-checkbox mt-checkbox-outline">
                                    @Html.EditorFor(model => model.Active)
                                    @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
                                    <span></span>
                                </label>
                            </div>
                        </div>
                    </div>
                </div>
                </div>
            </div>
        </div>
    </div>
}
    @*@using (Html.BeginForm("Create", "User",
          FormMethod.Post, new { @class = "form-horizontal", @id = "form-user" }))
        {
            <div class="row">
                <div class="col-md-4">
                    <form asp-action="Create">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <div class="form-group">
                            <label asp-for="Id" class="control-label"></label>
                            <input asp-for="Id" class="form-control" />
                            <span asp-validation-for="Id" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="Name" class="control-label"></label>
                            <input asp-for="Name" class="form-control" />
                            <span asp-validation-for="Name" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="Surname" class="control-label"></label>
                            <input asp-for="Surname" class="form-control" />
                            <span asp-validation-for="Surname" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="Email" class="control-label"></label>
                            <input asp-for="Email" class="form-control" />
                            <span asp-validation-for="Email" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="Password" class="control-label"></label>
                            <input asp-for="Password" class="form-control" />
                            <span asp-validation-for="Password" class="text-danger"></span>
                        </div>
                        <div class="form-group form-check">
                            <label class="form-check-label">
                                <input class="form-check-input" asp-for="Active" /> @Html.DisplayNameFor(model => model.Active)
                            </label>
                        </div>
                        <div class="form-group">
                            <label asp-for="CreatedAt" class="control-label"></label>
                            <input asp-for="CreatedAt" class="form-control" />
                            <span asp-validation-for="CreatedAt" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="UpdatedAt" class="control-label"></label>
                            <input asp-for="UpdatedAt" class="form-control" />
                            <span asp-validation-for="UpdatedAt" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <input type="submit" value="Create" class="btn btn-primary" />
                        </div>
                    </form>
                </div>
            </div>
        }*@


    <div>
        <a asp-action="Index">Back to List</a>
    </div>

    @section Scripts {
        @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    }
